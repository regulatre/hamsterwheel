[Unit]
Description=Hamster Wheel ADC App and Metrics Relay
After=network.target

[Service]
Type=simple
User=pi
WorkingDirectory=/home/pi/git/hamsterwheel/
ExecStart=/usr/bin/python3 ./hamster.py
Restart=always
# If a service restart is required, pause this many seconds. Default is 100ms which leads to failed service too quickly if say alsa isn't ready yet on boot.
RestartSec=10

# Tuning parameters, specific to each ADC environment.
Environment=WHEEL_CIRCUMFRENCE=0,0,21.5,21.5
# Logstash or whatever you use.
Environment=EVENT_RECEIVER_URL=http://192.168.1.100/hamsterwheel
Environment=MAX_VALID_RPM=300
Environment=GAIN=4
Environment=MIN_CHANGE=15
# DEBUG_ANALOG prints a ton of data to stdout, not suitable for a headless service.
Environment=DEBUG_ANALOG=false
# DEBUG_EACH_REVOLUTION collects, and transmits to the log collector, a wide range of metrics EVERY REVOLUTION. So you end up with large arrays of data points, suitable only for debugging.
Environment=DEBUG_EACH_REVOLUTION=false
# NOT FOR PROD!!! THIS DUMPS A CRUSHINGLY HUGE NUMBER OF DATA POINTS 
Environment=DUMP_ADC_SAMPLES=false



[Install]
WantedBy=multi-user.target


